!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).WebRTCPeer=e()}}(function(){return function(){return function e(n,t,o){function i(r,a){if(!t[r]){if(!n[r]){var c="function"==typeof require&&require;if(!a&&c)return c(r,!0);if(s)return s(r,!0);var d=new Error("Cannot find module '"+r+"'");throw d.code="MODULE_NOT_FOUND",d}var _=t[r]={exports:{}};n[r][0].call(_.exports,function(e){return i(n[r][1][e]||e)},_,_.exports,e,n,t,o)}return t[r].exports}for(var s="function"==typeof require&&require,r=0;r<o.length;r++)i(o[r]);return i}}()({1:[function(e,n,t){"use strict";const o=e=>(class extends e{constructor(...e){super(...e),this._handlers={}}on(e,n){return null==this._handlers[e]&&(this._handlers[e]=[]),this._handlers[e].push(n),this}once(e,n){const t=(...o)=>{n(...o),this.off(e,t)};return this.on(e,t)}off(e,n=null){if(null==n)this._handlers[e]=[];else{const t=this._handlers[e].indexOf(n);-1!=t&&this._handlers[e].splice(t,1)}return this}emit(e,...n){this._handlers[e]&&0!==this._handlers[e].length&&this._handlers[e].forEach(e=>e(...n))}});class i{}n.exports=class extends(o(i)){}},{}],2:[function(e,n,t){"use strict";n.exports=function(e,n){const t=new Error(e);return t.code=n,t}},{}],3:[function(e,n,t){"use strict";t.ADD_ICE_CANDIDATE="ERR_ADD_ICE_CANDIDATE",t.CREATE_ANSWER="ERR_CREATE_ANSWER",t.CREATE_OFFER="ERR_CREATE_OFFER",t.DATA_CHANNEL="ERR_DATA_CHANNEL",t.ICE_CONNECTION_CLOSED="ERR_ICE_CONNECTION_CLOSED",t.ICE_CONNECTION_FAILURE="ERR_ICE_CONNECTION_FAILURE",t.PEER_IS_DESTROYED="ERR_PEER_IS_DESTROYED",t.REMOVE_TRACK="ERR_REMOVE_TRACK",t.SET_LOCAL_DESCRIPTION="ERR_SET_LOCAL_DESCRIPTION",t.SET_REMOTE_DESCRIPTION="ERR_SET_REMOTE_DESCRIPTION",t.SIGNALING="ERR_SIGNALING",t.WEBRTC_SUPPORT="ERR_WEBRTC_SUPPORT"},{}],4:[function(e,n,t){"use strict";const o=e("lite-ee"),i=e("./create-error"),s=e("./parse-options"),r=e("./error-codes");n.exports=class extends o{constructor(e){super(),this._checkWebRTCSupport(),this._options=s(e),this._isConnected=!1,this._isDestroyed=!1,this._isIceComplete=!1,this._isNegotiating=!1,this._shouldRenegotiate=!1,this._peerConnection=null,this._dataChannel=null,this._remoteStreamIds=new Set,this._mediaTracksMap=new Map,this._setUpPeerConnection()}addStream(e){e.getTracks().forEach(n=>this.addTrack(n,e))}addTrack(e,n){const t=this._peerConnection.addTrack(e,n);this._mediaTracksMap.set(e,t)}destroy(e){const n=this;n._isDestroyed||(n._isConnected=!1,n._isDestroyed=!0,n._removeDataChannelHandlers(),n._removePeerConnectionHandlers(),n._dataChannel=null,n._peerConnection=null,n._mediaTracksMap=null,n._remoteStreamIds=null,e&&n.emit("error",e),n.emit("close"))}getStats(){if(this._isDestroyed)throw i("cannot getStats after peer is destroyed",r.PEER_IS_DESTROYED);return this._peerConnection.getStats()}isConnected(){return this._isConnected}isDestroyed(){return this._isDestroyed}removeStream(e){e.getTracks().forEach(e=>this.removeTrack(e))}removeTrack(e){if(!this._mediaTracksMap.has(e))throw i("cannot remove track that was never added or has already been removed",r.REMOVE_TRACK);const n=this._mediaTracksMap.get(e);this._peerConnection.removeTrack(n)}send(e){if(this._isDestroyed)throw i("cannot call send after peer is destroyed",r.PEER_IS_DESTROYED);this._dataChannel.send(e)}signal(e){const n=this;if(n._isDestroyed)throw i("cannot signal after peer is destroyed",r.SIGNALING);let t=e;if("string"==typeof e)try{t=JSON.parse(e)}catch(e){t={}}if(t.candidate)n._peerConnection.addIceCandidate(t.candidate).catch(function(e){const t=i(e,r.ADD_ICE_CANDIDATE);n.destroy(t)});else if(t.sdp)n._setRemoteDescription(t);else if(t.renegotiate)n._onNegotiationNeeded();else{const e=i("signal called with invalid signal data",r.SIGNALING);n.destroy(e)}}_setRemoteDescription(e){const n=this;n._peerConnection.setRemoteDescription(e).catch(function(e){const t=i(e,r.SET_REMOTE_DESCRIPTION);n.destroy(t)}).then(function(){n._isDestroyed||"offer"===e.type&&n._createAnswer()})}_setUpPeerConnection(){this._peerConnection=new window.RTCPeerConnection(this._options.peerConnectionConfig),this._addPeerConnectionHandlers(),this._setUpDefaultDataChannel(),this._options.streams.forEach(e=>this.addStream(e))}_addPeerConnectionHandlers(){const e=this;e._peerConnection.onicecandidate=function(n){e._onIceCandidate(n)},e._peerConnection.oniceconnectionstatechange=function(){e._onIceConnectionStateChange()},e._peerConnection.onicegatheringstatechange=function(){e._onIceGatheringStateChange()},e._peerConnection.onnegotiationneeded=function(){e._onNegotiationNeeded()},e._peerConnection.onsignalingstatechange=function(){e._onSignalingStateChange()},e._peerConnection.ontrack=function(n){e._onTrack(n)}}_setUpDefaultDataChannel(){const e=this;if(e._options.isInitiator){const n=null,t=e._peerConnection.createDataChannel(n,e._options.dataChannelConfig);e._assignDataChannel({channel:t})}else e._peerConnection.ondatachannel=function(n){e._assignDataChannel(n)}}_onNegotiationNeeded(){this._options.isInitiator?this._isNegotiating?this._shouldRenegotiate=!0:this._createOffer():this.emit("signal",{renegotiate:!0}),this._isNegotiating=!0}_createAnswer(){const e=this;function n(){e.emit("signal",e._peerConnection.localDescription)}e._isDestroyed||e._peerConnection.createAnswer().catch(function(n){const t=i(n,r.CREATE_ANSWER);e.destroy(t)}).then(function(n){if(!e._isDestroyed)return n.sdp=e._options.sdpTransformer(n.sdp),e._peerConnection.setLocalDescription(n)}).catch(function(n){const t=i(n,r.SET_LOCAL_DESCRIPTION);e.destroy(t)}).then(function(t){e._isDestroyed||(e._options.isTrickleIceEnabled||e._isIceComplete?n():e.once("_iceComplete",n))})}_onSignalingStateChange(){this._isDestroyed||"stable"===this._peerConnection.signalingState&&(this._isNegotiating=!1,this._shouldRenegotiate&&(this._shouldRenegotiate=!1,this._onNegotiationNeeded()))}_onTrack(e){const n=this;n._isDestroyed||e.streams.forEach(function(t){t.onremovetrack=function(e){n._isDestroyed||(!t.active&&n._remoteStreamIds.has(t.id)&&(n._remoteStreamIds.delete(t.id),setTimeout(()=>{n.emit("removestream",t)},0)),n.emit("removetrack",e.track,e.target))},setTimeout(function(){n.emit("track",e.track,t)},0),n._remoteStreamIds.has(t.id)||(n._remoteStreamIds.add(t.id),setTimeout(function(){n.emit("stream",t)},0))})}_onIceCandidate(e){if(!this._isDestroyed&&e.candidate&&this._options.isTrickleIceEnabled){const n={candidate:e.candidate};this.emit("signal",n)}}_onIceGatheringStateChange(){this._isDestroyed||("complete"===this._peerConnection.iceGatheringState?(this._isIceComplete=!0,this.emit("_iceComplete")):this._isIceComplete=!1)}_onIceConnectionStateChange(){const e=this;if(e._isDestroyed)return;const n=e._peerConnection.iceConnectionState;"failed"===n?e.destroy(i("Ice connection failed.",r.ICE_CONNECTION_FAILURE)):"closed"===n&&e.destroy(i("ice connection closed",r.ICE_CONNECTION_CLOSED))}_createOffer(){const e=this;function n(){e.emit("signal",e._peerConnection.localDescription)}e._isDestroyed||(e._acceptIncomingVideoAndAudio(),e._peerConnection.createOffer().catch(function(n){e.destroy(i(n,r.CREATE_OFFER))}).then(function(n){if(!e._isDestroyed)return n.sdp=e._options.sdpTransformer(n.sdp),e._peerConnection.setLocalDescription(n)}).catch(function(n){e.destroy(i(n,r.SET_LOCAL_DESCRIPTION))}).then(function(t){e._isDestroyed||(e._options.isTrickleIceEnabled||e._isIceComplete?n():e.once("_iceComplete",n))}))}_acceptIncomingVideoAndAudio(){const e=this._peerConnection.getTransceivers().find(e=>e.sender.track&&"audio"===e.sender.track.kind),n=this._peerConnection.getTransceivers().find(e=>e.sender.track&&"video"===e.sender.track.kind);null==e&&this._peerConnection.addTransceiver("audio"),null==n&&this._peerConnection.addTransceiver("video")}_assignDataChannel(e){const n=this;n._dataChannel=e.channel,n._dataChannel.binaryType="arraybuffer",n._dataChannel.onclose=function(){n._onChannelClose()},n._dataChannel.onerror=function(e){const t=e.message,o=r.DATA_CHANNEL,s=i(t,o);n.destroy(s)},n._dataChannel.onmessage=function(e){n._onChannelMessage(e)},n._dataChannel.onopen=function(){n._onChannelOpen()}}_onChannelOpen(){this._isConnected||this._isDestroyed||(this._isConnected=!0,this.emit("connect"))}_onChannelMessage(e){this._isDestroyed||this.emit("data",e.data)}_onChannelClose(){this._isDestroyed||this.destroy()}_removeDataChannelHandlers(){if(this._dataChannel){try{this._dataChannel.close()}catch(e){}this._dataChannel.onclose=null,this._dataChannel.onerror=null,this._dataChannel.onmessage=null,this._dataChannel.onopen=null}}_removePeerConnectionHandlers(){if(this._peerConnection){try{this._peerConnection.close()}catch(e){}this._peerConnection.onicecandidate=null,this._peerConnection.oniceconnectionstatechange=null,this._peerConnection.onicegatheringstatechange=null,this._peerConnection.onnegotiationneeded=null,this._peerConnection.onsignalingstatechange=null,this._peerConnection.ontrack=null,this._peerConnection.ondatachannel=null}}_checkWebRTCSupport(){if("undefined"==typeof window)throw i("WebRTC is not supported in this environment",r.WEBRTC_SUPPORT);if(null==window.RTCPeerConnection)throw i("WebRTC is not supported in this browser",r.WEBRTC_SUPPORT);"createDataChannel"in window.RTCPeerConnection.prototype||console.log("webrtc-link :: data channel is not supported in this browser")}}},{"./create-error":2,"./error-codes":3,"./parse-options":5,"lite-ee":1}],5:[function(e,n,t){"use strict";n.exports=function(e){const n=e||{};return{dataChannelConfig:n.dataChannelConfig||{},isInitiator:!0===n.isInitiator,isTrickleIceEnabled:!1!==n.isTrickleIceEnabled,peerConnectionConfig:function(e){const n=e.peerConnectionConfig||{};return Array.isArray(n.iceServers)||(n.iceServers=[]),n}(n),sdpTransformer:function(e){return"function"==typeof e.sdpTransformer?e.sdpTransformer:e=>e}(n),streams:function(e){return Array.isArray(e.streams)?e.streams:[]}(n)}}},{}]},{},[4])(4)});